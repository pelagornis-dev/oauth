{
  "compilerOptions": {
    "declaration": true /* Generates corresponding '.d.ts' file. */,
    "declarationMap": true, // This will allow code navigation between projects.
    "target": "ESNext",
    "module": "Node16",
    "moduleResolution": "Node16" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    /* Do not emit comments to output. */
    "allowJs": true /* Allow javascript files to be compiled. */,
    "checkJs": false /* Report errors in .js files. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
    "noEmit": true /* Do not emit outputs. */,
    /* Concatenate and emit output to single file. */
    "outDir": "./dist" /* Redirect output structure to the directory. */,
    "resolveJsonModule": true,
    "rootDir": "." /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "sourceMap": true,
    "strict": false /* Enable all strict type-checking options. */,
    "types": [
      "node",
    ]
  },
  "exclude": [
    "dist",
    "build",
    "temp",
    "node_modules"
  ],
  /* Like tsconfig.build.json, but includes test directory and doesnt emit anything */
  "include": [],
  "files": [],
  "ts-node": {
    "swc": true
  },
  "composite": true, // Required for references to work
  "references": [
    // if your tsconfig is something different
    {
      "path": "./packages/oauth"
    },
    {
      "path": "./packages/oauth-app"
    },
    {
      "path": "./packages/oauth-react"
    },
    {
      "path": "./packages/oauth-server"
    },
  ]
}